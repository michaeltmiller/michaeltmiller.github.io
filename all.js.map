{"version":3,"sources":["app.js","angular-sanitize.js","apiService.js","collection.js","frontCtrl.js","itemCtrl.js","member.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","window","$sanitizeMinErr","$$minErr","bind","extend","forEach","isDefined","lowercase","noop","htmlParser","htmlSanitizeWriter","$SanitizeProvider","svgEnabled","$get","$$sanitizeUri","validElements","svgElements","html","buf","uri","isImage","test","join","enableSvg","htmlParserImpl","htmlSanitizeWriterImpl","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","voidElements","toMap","optionalEndTagBlockElements","optionalEndTagInlineElements","optionalEndTagElements","blockElements","inlineElements","blockedElements","uriAttrs","htmlAttrs","svgAttrs","validAttrs","str","lowercaseKeys","obj","items","split","i","length","inertBodyElement","doc","document","implementation","createHTMLDocument","docElement","documentElement","getDocumentElement","bodyElements","getElementsByTagName","createElement","appendChild","handler","undefined","innerHTML","mXSSAttempts","documentMode","stripCustomNsAttrs","node","firstChild","nodeType","start","nodeName","toLowerCase","attrToMap","attributes","chars","textContent","nextNode","end","nextSibling","parentNode","removeChild","attrs","map","ii","attr","name","value","encodeEntities","replace","hi","charCodeAt","low","uriValidator","ignoreCurrentElement","out","push","tag","key","lkey","Node","ELEMENT_NODE","l","attrNode","attrName","lastIndexOf","removeAttributeNode","sanitizeText","writer","provider","filter","$sanitize","LINKY_URL_REGEXP","MAILTO_REGEXP","linkyMinErr","isFunction","isObject","isString","text","target","attributesFn","getAttributesObject","getEmptyAttributesObject","match","raw","index","addText","substr","addLink","substring","linkAttributes","service","$http","getTopStories","get","then","res","console","log","data","getSingleStory","id","directive","restrict","scope","collection","template","$scope","apiService","response","news","$stateParams","item","$compile","member","link","element","isArray","comments","cloned","append"],"mappings":";;AAAAA,QAAQC,MAAR,CAAe,SAAf,EAA0B,CAAC,WAAD,EAAc,YAAd,EAA4B,eAA5B,CAA1B,EACCC,MADD,CACQ,UAASC,cAAT,EAAyBC,kBAAzB,EAA4C;AACnDD,gBACCE,KADD,CACO,MADP,EACc;AACbC,OAAI,OADS;AAEbC,eAAY,cAFC;AAGbC,cAAW;AAHE,EADd,EAMCH,KAND,CAMO,MANP,EAMc;AACbC,OAAI,WADS;AAEbC,eAAY,cAFC;AAGbC,cAAW;AAHE,EANd;;AAaAJ,oBACCK,SADD,CACW,OADX;AAWA,CA1BD;;;ACAA;;;;;AAKA,CAAC,UAASC,MAAT,EAAiBV,OAAjB,EAA0B;AAAC;;AAE5B;;;;;;;;;;;AAWA,MAAIW,kBAAkBX,QAAQY,QAAR,CAAiB,WAAjB,CAAtB;AACA,MAAIC,IAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,kBAAJ;;AAEA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;;;;;;;;AAQA,WAASC,iBAAT,GAA6B;AAC3B,QAAIC,aAAa,KAAjB;;AAEA,SAAKC,IAAL,GAAY,CAAC,eAAD,EAAkB,UAASC,aAAT,EAAwB;AACpD,UAAIF,UAAJ,EAAgB;AACdR,eAAOW,aAAP,EAAsBC,WAAtB;AACD;AACD,aAAO,UAASC,IAAT,EAAe;AACpB,YAAIC,MAAM,EAAV;AACAT,mBAAWQ,IAAX,EAAiBP,mBAAmBQ,GAAnB,EAAwB,UAASC,GAAT,EAAcC,OAAd,EAAuB;AAC9D,iBAAO,CAAC,WAAWC,IAAX,CAAgBP,cAAcK,GAAd,EAAmBC,OAAnB,CAAhB,CAAR;AACD,SAFgB,CAAjB;AAGA,eAAOF,IAAII,IAAJ,CAAS,EAAT,CAAP;AACD,OAND;AAOD,KAXW,CAAZ;;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAAKC,SAAL,GAAiB,UAASA,SAAT,EAAoB;AACnC,UAAIjB,UAAUiB,SAAV,CAAJ,EAA0B;AACxBX,qBAAaW,SAAb;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACL,eAAOX,UAAP;AACD;AACF,KAPD;;AASA;AACA;AACA;;AAEAT,WAAOb,QAAQa,IAAf;AACAC,aAASd,QAAQc,MAAjB;AACAC,cAAUf,QAAQe,OAAlB;AACAC,gBAAYhB,QAAQgB,SAApB;AACAC,gBAAYjB,QAAQiB,SAApB;AACAC,WAAOlB,QAAQkB,IAAf;;AAEAC,iBAAae,cAAb;AACAd,yBAAqBe,sBAArB;;AAEA;AACA,QAAIC,wBAAwB,iCAA5B;;AACE;AACAC,8BAA0B,cAF5B;;AAKA;AACA;AACA;;AAEA;AACA;AACA,QAAIC,eAAeC,MAAM,wBAAN,CAAnB;;AAEA;AACA;AACA,QAAIC,8BAA8BD,MAAM,gDAAN,CAAlC;AAAA,QACIE,+BAA+BF,MAAM,OAAN,CADnC;AAAA,QAEIG,yBAAyB5B,OAAO,EAAP,EACe2B,4BADf,EAEeD,2BAFf,CAF7B;;AAMA;AACA,QAAIG,gBAAgB7B,OAAO,EAAP,EAAW0B,2BAAX,EAAwCD,MAAM,qBAC1D,yFAD0D,GAE1D,8DAFoD,CAAxC,CAApB;;AAIA;AACA,QAAIK,iBAAiB9B,OAAO,EAAP,EAAW2B,4BAAX,EAAyCF,MAAM,sBAC5D,uFAD4D,GAE5D,qDAFsD,CAAzC,CAArB;;AAIA;AACA;AACA;AACA;AACA,QAAIb,cAAca,MAAM,6EAChB,4FADgB,GAEhB,sDAFU,CAAlB;;AAIA;AACA,QAAIM,kBAAkBN,MAAM,cAAN,CAAtB;;AAEA,QAAId,gBAAgBX,OAAO,EAAP,EACewB,YADf,EAEeK,aAFf,EAGeC,cAHf,EAIeF,sBAJf,CAApB;;AAMA;AACA,QAAII,WAAWP,MAAM,8CAAN,CAAf;;AAEA,QAAIQ,YAAYR,MAAM,4EAClB,4EADkB,GAElB,+DAFkB,GAGlB,2EAHkB,GAIlB,2BAJY,CAAhB;;AAMA;AACA;AACA,QAAIS,WAAWT,MAAM,qEACjB,oFADiB,GAEjB,0FAFiB,GAGjB,wFAHiB,GAIjB,qFAJiB,GAKjB,uFALiB,GAMjB,qFANiB,GAOjB,+EAPiB,GAQjB,wFARiB,GASjB,sFATiB,GAUjB,oFAViB,GAWjB,4FAXiB,GAYjB,2FAZiB,GAajB,8FAbiB,GAcjB,6EAdW,EAcoE,IAdpE,CAAf;;AAgBA,QAAIU,aAAanC,OAAO,EAAP,EACegC,QADf,EAEeE,QAFf,EAGeD,SAHf,CAAjB;;AAKA,aAASR,KAAT,CAAeW,GAAf,EAAoBC,aAApB,EAAmC;AACjC,UAAIC,MAAM,EAAV;AAAA,UAAcC,QAAQH,IAAII,KAAJ,CAAU,GAAV,CAAtB;AAAA,UAAsCC,CAAtC;AACA,WAAKA,IAAI,CAAT,EAAYA,IAAIF,MAAMG,MAAtB,EAA8BD,GAA9B,EAAmC;AACjCH,YAAID,gBAAgBlC,UAAUoC,MAAME,CAAN,CAAV,CAAhB,GAAsCF,MAAME,CAAN,CAA1C,IAAsD,IAAtD;AACD;AACD,aAAOH,GAAP;AACD;;AAED,QAAIK,gBAAJ;AACA,KAAC,UAAS/C,MAAT,EAAiB;AAChB,UAAIgD,GAAJ;AACA,UAAIhD,OAAOiD,QAAP,IAAmBjD,OAAOiD,QAAP,CAAgBC,cAAvC,EAAuD;AACrDF,cAAMhD,OAAOiD,QAAP,CAAgBC,cAAhB,CAA+BC,kBAA/B,CAAkD,OAAlD,CAAN;AACD,OAFD,MAEO;AACL,cAAMlD,gBAAgB,SAAhB,EAA2B,sCAA3B,CAAN;AACD;AACD,UAAImD,aAAaJ,IAAIK,eAAJ,IAAuBL,IAAIM,kBAAJ,EAAxC;AACA,UAAIC,eAAeH,WAAWI,oBAAX,CAAgC,MAAhC,CAAnB;;AAEA;AACA,UAAID,aAAaT,MAAb,KAAwB,CAA5B,EAA+B;AAC7BC,2BAAmBQ,aAAa,CAAb,CAAnB;AACD,OAFD,MAEO;AACL,YAAItC,OAAO+B,IAAIS,aAAJ,CAAkB,MAAlB,CAAX;AACAV,2BAAmBC,IAAIS,aAAJ,CAAkB,MAAlB,CAAnB;AACAxC,aAAKyC,WAAL,CAAiBX,gBAAjB;AACAC,YAAIU,WAAJ,CAAgBzC,IAAhB;AACD;AACF,KAnBD,EAmBGjB,MAnBH;;AAqBA;;;;;;;;;;;;AAYA,aAASwB,cAAT,CAAwBP,IAAxB,EAA8B0C,OAA9B,EAAuC;AACrC,UAAI1C,SAAS,IAAT,IAAiBA,SAAS2C,SAA9B,EAAyC;AACvC3C,eAAO,EAAP;AACD,OAFD,MAEO,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AACnCA,eAAO,KAAKA,IAAZ;AACD;AACD8B,uBAAiBc,SAAjB,GAA6B5C,IAA7B;;AAEA;AACA,UAAI6C,eAAe,CAAnB;AACA,SAAG;AACD,YAAIA,iBAAiB,CAArB,EAAwB;AACtB,gBAAM7D,gBAAgB,QAAhB,EAA0B,uDAA1B,CAAN;AACD;AACD6D;;AAEA;AACA,YAAI9D,OAAOiD,QAAP,CAAgBc,YAApB,EAAkC;AAChCC,6BAAmBjB,gBAAnB;AACD;AACD9B,eAAO8B,iBAAiBc,SAAxB,CAVC,CAUkC;AACnCd,yBAAiBc,SAAjB,GAA6B5C,IAA7B;AACD,OAZD,QAYSA,SAAS8B,iBAAiBc,SAZnC;;AAcA,UAAII,OAAOlB,iBAAiBmB,UAA5B;AACA,aAAOD,IAAP,EAAa;AACX,gBAAQA,KAAKE,QAAb;AACE,eAAK,CAAL;AAAQ;AACNR,oBAAQS,KAAR,CAAcH,KAAKI,QAAL,CAAcC,WAAd,EAAd,EAA2CC,UAAUN,KAAKO,UAAf,CAA3C;AACA;AACF,eAAK,CAAL;AAAQ;AACNb,oBAAQc,KAAR,CAAcR,KAAKS,WAAnB;AACA;AANJ;;AASA,YAAIC,QAAJ;AACA,YAAI,EAAEA,WAAWV,KAAKC,UAAlB,CAAJ,EAAmC;AACjC,cAAID,KAAKE,QAAL,KAAkB,CAAtB,EAAyB;AACvBR,oBAAQiB,GAAR,CAAYX,KAAKI,QAAL,CAAcC,WAAd,EAAZ;AACD;AACDK,qBAAWV,KAAKY,WAAhB;AACA,cAAI,CAACF,QAAL,EAAe;AACb,mBAAOA,YAAY,IAAnB,EAAyB;AACvBV,qBAAOA,KAAKa,UAAZ;AACA,kBAAIb,SAASlB,gBAAb,EAA+B;AAC/B4B,yBAAWV,KAAKY,WAAhB;AACA,kBAAIZ,KAAKE,QAAL,KAAkB,CAAtB,EAAyB;AACvBR,wBAAQiB,GAAR,CAAYX,KAAKI,QAAL,CAAcC,WAAd,EAAZ;AACD;AACF;AACF;AACF;AACDL,eAAOU,QAAP;AACD;;AAED,aAAQV,OAAOlB,iBAAiBmB,UAAhC,EAA6C;AAC3CnB,yBAAiBgC,WAAjB,CAA6Bd,IAA7B;AACD;AACF;;AAED,aAASM,SAAT,CAAmBS,KAAnB,EAA0B;AACxB,UAAIC,MAAM,EAAV;AACA,WAAK,IAAIpC,IAAI,CAAR,EAAWqC,KAAKF,MAAMlC,MAA3B,EAAmCD,IAAIqC,EAAvC,EAA2CrC,GAA3C,EAAgD;AAC9C,YAAIsC,OAAOH,MAAMnC,CAAN,CAAX;AACAoC,YAAIE,KAAKC,IAAT,IAAiBD,KAAKE,KAAtB;AACD;AACD,aAAOJ,GAAP;AACD;;AAGD;;;;;;;AAOA,aAASK,cAAT,CAAwBD,KAAxB,EAA+B;AAC7B,aAAOA,MACLE,OADK,CACG,IADH,EACS,OADT,EAELA,OAFK,CAEG7D,qBAFH,EAE0B,UAAS2D,KAAT,EAAgB;AAC7C,YAAIG,KAAKH,MAAMI,UAAN,CAAiB,CAAjB,CAAT;AACA,YAAIC,MAAML,MAAMI,UAAN,CAAiB,CAAjB,CAAV;AACA,eAAO,QAAS,CAACD,KAAK,MAAN,IAAgB,KAAjB,IAA2BE,MAAM,MAAjC,IAA2C,OAAnD,IAA8D,GAArE;AACD,OANI,EAOLH,OAPK,CAOG5D,uBAPH,EAO4B,UAAS0D,KAAT,EAAgB;AAC/C,eAAO,OAAOA,MAAMI,UAAN,CAAiB,CAAjB,CAAP,GAA6B,GAApC;AACD,OATI,EAULF,OAVK,CAUG,IAVH,EAUS,MAVT,EAWLA,OAXK,CAWG,IAXH,EAWS,MAXT,CAAP;AAYD;;AAED;;;;;;;;;;AAUA,aAAS9D,sBAAT,CAAgCP,GAAhC,EAAqCyE,YAArC,EAAmD;AACjD,UAAIC,uBAAuB,KAA3B;AACA,UAAIC,MAAM1F,KAAKe,GAAL,EAAUA,IAAI4E,IAAd,CAAV;AACA,aAAO;AACL1B,eAAO,eAAS2B,GAAT,EAAcf,KAAd,EAAqB;AAC1Be,gBAAMxF,UAAUwF,GAAV,CAAN;AACA,cAAI,CAACH,oBAAD,IAAyBzD,gBAAgB4D,GAAhB,CAA7B,EAAmD;AACjDH,mCAAuBG,GAAvB;AACD;AACD,cAAI,CAACH,oBAAD,IAAyB7E,cAAcgF,GAAd,MAAuB,IAApD,EAA0D;AACxDF,gBAAI,GAAJ;AACAA,gBAAIE,GAAJ;AACA1F,oBAAQ2E,KAAR,EAAe,UAASK,KAAT,EAAgBW,GAAhB,EAAqB;AAClC,kBAAIC,OAAO1F,UAAUyF,GAAV,CAAX;AACA,kBAAI5E,UAAW2E,QAAQ,KAAR,IAAiBE,SAAS,KAA3B,IAAsCA,SAAS,YAA7D;AACA,kBAAI1D,WAAW0D,IAAX,MAAqB,IAArB,KACD7D,SAAS6D,IAAT,MAAmB,IAAnB,IAA2BN,aAAaN,KAAb,EAAoBjE,OAApB,CAD1B,CAAJ,EAC6D;AAC3DyE,oBAAI,GAAJ;AACAA,oBAAIG,GAAJ;AACAH,oBAAI,IAAJ;AACAA,oBAAIP,eAAeD,KAAf,CAAJ;AACAQ,oBAAI,GAAJ;AACD;AACF,aAXD;AAYAA,gBAAI,GAAJ;AACD;AACF,SAvBI;AAwBLjB,aAAK,aAASmB,GAAT,EAAc;AACjBA,gBAAMxF,UAAUwF,GAAV,CAAN;AACA,cAAI,CAACH,oBAAD,IAAyB7E,cAAcgF,GAAd,MAAuB,IAAhD,IAAwDnE,aAAamE,GAAb,MAAsB,IAAlF,EAAwF;AACtFF,gBAAI,IAAJ;AACAA,gBAAIE,GAAJ;AACAF,gBAAI,GAAJ;AACD;AACD;AACA,cAAIE,OAAOH,oBAAX,EAAiC;AAC/BA,mCAAuB,KAAvB;AACD;AACF,SAnCI;AAoCLnB,eAAO,eAASA,MAAT,EAAgB;AACrB,cAAI,CAACmB,oBAAL,EAA2B;AACzBC,gBAAIP,eAAeb,MAAf,CAAJ;AACD;AACF;AAxCI,OAAP;AA0CD;;AAGD;;;;;;;AAOA,aAAST,kBAAT,CAA4BC,IAA5B,EAAkC;AAChC,aAAOA,IAAP,EAAa;AACX,YAAIA,KAAKE,QAAL,KAAkBnE,OAAOkG,IAAP,CAAYC,YAAlC,EAAgD;AAC9C,cAAInB,QAAQf,KAAKO,UAAjB;AACA,eAAK,IAAI3B,IAAI,CAAR,EAAWuD,IAAIpB,MAAMlC,MAA1B,EAAkCD,IAAIuD,CAAtC,EAAyCvD,GAAzC,EAA8C;AAC5C,gBAAIwD,WAAWrB,MAAMnC,CAAN,CAAf;AACA,gBAAIyD,WAAWD,SAASjB,IAAT,CAAcd,WAAd,EAAf;AACA,gBAAIgC,aAAa,WAAb,IAA4BA,SAASC,WAAT,CAAqB,MAArB,EAA6B,CAA7B,MAAoC,CAApE,EAAuE;AACrEtC,mBAAKuC,mBAAL,CAAyBH,QAAzB;AACAxD;AACAuD;AACD;AACF;AACF;;AAED,YAAIzB,WAAWV,KAAKC,UAApB;AACA,YAAIS,QAAJ,EAAc;AACZX,6BAAmBW,QAAnB;AACD;;AAEDV,eAAOA,KAAKY,WAAZ;AACD;AACF;AACF;;AAED,WAAS4B,YAAT,CAAsBhC,KAAtB,EAA6B;AAC3B,QAAIvD,MAAM,EAAV;AACA,QAAIwF,SAAShG,mBAAmBQ,GAAnB,EAAwBV,IAAxB,CAAb;AACAkG,WAAOjC,KAAP,CAAaA,KAAb;AACA,WAAOvD,IAAII,IAAJ,CAAS,EAAT,CAAP;AACD;;AAGD;AACAhC,UAAQC,MAAR,CAAe,YAAf,EAA6B,EAA7B,EAAiCoH,QAAjC,CAA0C,WAA1C,EAAuDhG,iBAAvD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HArB,UAAQC,MAAR,CAAe,YAAf,EAA6BqH,MAA7B,CAAoC,OAApC,EAA6C,CAAC,WAAD,EAAc,UAASC,SAAT,EAAoB;AAC7E,QAAIC,mBACE,yFADN;AAAA,QAEIC,gBAAgB,WAFpB;;AAIA,QAAIC,cAAc1H,QAAQY,QAAR,CAAiB,OAAjB,CAAlB;AACA,QAAII,YAAYhB,QAAQgB,SAAxB;AACA,QAAI2G,aAAa3H,QAAQ2H,UAAzB;AACA,QAAIC,WAAW5H,QAAQ4H,QAAvB;AACA,QAAIC,WAAW7H,QAAQ6H,QAAvB;;AAEA,WAAO,UAASC,IAAT,EAAeC,MAAf,EAAuB7C,UAAvB,EAAmC;AACxC,UAAI4C,QAAQ,IAAR,IAAgBA,SAAS,EAA7B,EAAiC,OAAOA,IAAP;AACjC,UAAI,CAACD,SAASC,IAAT,CAAL,EAAqB,MAAMJ,YAAY,WAAZ,EAAyB,mCAAzB,EAA8DI,IAA9D,CAAN;;AAErB,UAAIE,eACFL,WAAWzC,UAAX,IAAyBA,UAAzB,GACA0C,SAAS1C,UAAT,IAAuB,SAAS+C,mBAAT,GAA+B;AAAC,eAAO/C,UAAP;AAAmB,OAA1E,GACA,SAASgD,wBAAT,GAAoC;AAAC,eAAO,EAAP;AAAW,OAHlD;;AAKA,UAAIC,KAAJ;AACA,UAAIC,MAAMN,IAAV;AACA,UAAInG,OAAO,EAAX;AACA,UAAIrB,GAAJ;AACA,UAAIiD,CAAJ;AACA,aAAQ4E,QAAQC,IAAID,KAAJ,CAAUX,gBAAV,CAAhB,EAA8C;AAC5C;AACAlH,cAAM6H,MAAM,CAAN,CAAN;AACA;AACA,YAAI,CAACA,MAAM,CAAN,CAAD,IAAa,CAACA,MAAM,CAAN,CAAlB,EAA4B;AAC1B7H,gBAAM,CAAC6H,MAAM,CAAN,IAAW,SAAX,GAAuB,SAAxB,IAAqC7H,GAA3C;AACD;AACDiD,YAAI4E,MAAME,KAAV;AACAC,gBAAQF,IAAIG,MAAJ,CAAW,CAAX,EAAchF,CAAd,CAAR;AACAiF,gBAAQlI,GAAR,EAAa6H,MAAM,CAAN,EAASlC,OAAT,CAAiBwB,aAAjB,EAAgC,EAAhC,CAAb;AACAW,cAAMA,IAAIK,SAAJ,CAAclF,IAAI4E,MAAM,CAAN,EAAS3E,MAA3B,CAAN;AACD;AACD8E,cAAQF,GAAR;AACA,aAAOb,UAAU5F,KAAKK,IAAL,CAAU,EAAV,CAAV,CAAP;;AAEA,eAASsG,OAAT,CAAiBR,IAAjB,EAAuB;AACrB,YAAI,CAACA,IAAL,EAAW;AACT;AACD;AACDnG,aAAK6E,IAAL,CAAUW,aAAaW,IAAb,CAAV;AACD;;AAED,eAASU,OAAT,CAAiBlI,GAAjB,EAAsBwH,IAAtB,EAA4B;AAC1B,YAAIpB,GAAJ;AAAA,YAASgC,iBAAiBV,aAAa1H,GAAb,CAA1B;AACAqB,aAAK6E,IAAL,CAAU,KAAV;;AAEA,aAAKE,GAAL,IAAYgC,cAAZ,EAA4B;AAC1B/G,eAAK6E,IAAL,CAAUE,MAAM,IAAN,GAAagC,eAAehC,GAAf,CAAb,GAAmC,IAA7C;AACD;;AAED,YAAI1F,UAAU+G,MAAV,KAAqB,EAAE,YAAYW,cAAd,CAAzB,EAAwD;AACtD/G,eAAK6E,IAAL,CAAU,UAAV,EACUuB,MADV,EAEU,IAFV;AAGD;AACDpG,aAAK6E,IAAL,CAAU,QAAV,EACUlG,IAAI2F,OAAJ,CAAY,IAAZ,EAAkB,QAAlB,CADV,EAEU,IAFV;AAGAqC,gBAAQR,IAAR;AACAnG,aAAK6E,IAAL,CAAU,MAAV;AACD;AACF,KAvDD;AAwDD,GAnE4C,CAA7C;AAsEC,CA7tBD,EA6tBG9F,MA7tBH,EA6tBWA,OAAOV,OA7tBlB;;;ACLAA,QAAQC,MAAR,CAAe,SAAf,EACC0I,OADD,CACS,YADT,EACuB,UAASC,KAAT,EAAe;;AAErC,MAAKC,aAAL,GAAmB,YAAU;AAC5B,SAAOD,MAAME,GAAN,CAAU,sCAAV,EACNC,IADM,CACD,UAASC,GAAT,EAAa;AAClBC,WAAQC,GAAR,CAAYF,GAAZ;AACA,UAAOA,IAAIG,IAAX;AACA,GAJM,CAAP;AAKA,EAND;;AAQA,MAAKC,cAAL,GAAoB,UAASC,EAAT,EAAY;AAC/B,SAAOT,MAAME,GAAN,CAAU,0CAAwCO,EAAlD,EACNN,IADM,CACD,UAASC,GAAT,EAAa;AAClB,UAAOA,IAAIG,IAAX;AACA,GAHM,CAAP;AAIA,EALD;AASA,CApBD;;;ACEAnJ,QAAQC,MAAR,CAAe,SAAf,EACEqJ,SADF,CACY,YADZ,EAC0B,YAAY;AACpC,WAAO;AACHC,kBAAU,GADP;AAEHtD,iBAAS,IAFN;AAGHuD,eAAO;AACHC,wBAAY;AADT,SAHJ;AAMHC,kBAAU;AANP,KAAP;AAQD,CAVD;;;ACFA1J,QAAQC,MAAR,CAAe,SAAf,EACKO,UADL,CACgB,WADhB,EAC6B,UAASmJ,MAAT,EAAiBC,UAAjB,EAA6B;;AAGlDA,eAAWf,aAAX,GAA2BE,IAA3B,CAAgC,UAASc,QAAT,EAAmB;AAC/CF,eAAOG,IAAP,GAAYD,QAAZ;AACH,KAFD;AASH,CAbL;;;ACAA7J,QAAQC,MAAR,CAAe,SAAf,EACKO,UADL,CACgB,UADhB,EAC4B,UAASmJ,MAAT,EAAiBC,UAAjB,EAA6BG,YAA7B,EAA2C;;AAE3DH,eAAWR,cAAX,CAA0BW,aAAaV,EAAvC,EAA2CN,IAA3C,CAAgD,UAASC,GAAT,EAAc;AAC1DW,eAAOK,IAAP,GAAYhB,GAAZ;AAAiB,KADrB;AAiBH,CApBT;;;ACAAhJ,QAAQC,MAAR,CAAe,SAAf,EACKqJ,SADL,CACe,QADf,EACyB,UAASW,QAAT,EAAmB;AACpC,WAAO;AACHV,kBAAU,GADP;AAEHtD,iBAAS,IAFN;AAGHuD,eAAO;AACHU,oBAAQ;AADL,SAHJ;AAMH3J,qBAAa,aANV;AAOH4J,cAAM,cAASX,KAAT,EAAgBY,OAAhB,EAAyB1E,KAAzB,EAAgC;AAClC,gBAAI1F,QAAQqK,OAAR,CAAgBb,MAAMU,MAAN,CAAaI,QAA7B,CAAJ,EAA4C;AACxCL,yBAAS,6EAAT,EAAwFT,KAAxF,EAA+F,UAASe,MAAT,EAAiBf,KAAjB,EAAwB;AACnHY,4BAAQI,MAAR,CAAeD,MAAf;AACH,iBAFD;AAGH;AACJ;AAbE,KAAP;AAeH,CAjBL","file":"all.js","sourcesContent":["angular.module('hackApp', ['ui.router', 'ngSanitize', 'angularMoment'])\n.config(function($stateProvider, $urlRouterProvider){\n\t$stateProvider\n\t.state('news',{\n\t\turl:'/news',\n\t\ttemplateUrl:'../news.html',\n\t\tcontroller:'frontCtrl'\n\t})\n\t.state('item',{\n\t\turl:'/item/:id',\n\t\ttemplateUrl:'../item.html',\n\t\tcontroller:'itemCtrl'\n\t});\n\n\n\t$urlRouterProvider\n\t.otherwise('/news');\n\n\n\n\n\n\n\n\n\n});","/**\n * @license AngularJS v1.6.1\n * (c) 2010-2016 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {'use strict';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables likes document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nvar $sanitizeMinErr = angular.$$minErr('$sanitize');\nvar bind;\nvar extend;\nvar forEach;\nvar isDefined;\nvar lowercase;\nvar noop;\nvar htmlParser;\nvar htmlSanitizeWriter;\n\n/**\n * @ngdoc module\n * @name ngSanitize\n * @description\n *\n * # ngSanitize\n *\n * The `ngSanitize` module provides functionality to sanitize HTML.\n *\n *\n * <div doc-module-components=\"ngSanitize\"></div>\n *\n * See {@link ngSanitize.$sanitize `$sanitize`} for usage.\n */\n\n/**\n * @ngdoc service\n * @name $sanitize\n * @kind function\n *\n * @description\n *   Sanitizes an html string by stripping all potentially dangerous tokens.\n *\n *   The input is sanitized by parsing the HTML into tokens. All safe tokens (from a whitelist) are\n *   then serialized back to properly escaped html string. This means that no unsafe input can make\n *   it into the returned string.\n *\n *   The whitelist for URL sanitization of attribute values is configured using the functions\n *   `aHrefSanitizationWhitelist` and `imgSrcSanitizationWhitelist` of {@link ng.$compileProvider\n *   `$compileProvider`}.\n *\n *   The input may also contain SVG markup if this is enabled via {@link $sanitizeProvider}.\n *\n * @param {string} html HTML input.\n * @returns {string} Sanitized HTML.\n *\n * @example\n   <example module=\"sanitizeExample\" deps=\"angular-sanitize.js\" name=\"sanitize-service\">\n   <file name=\"index.html\">\n     <script>\n         angular.module('sanitizeExample', ['ngSanitize'])\n           .controller('ExampleController', ['$scope', '$sce', function($scope, $sce) {\n             $scope.snippet =\n               '<p style=\"color:blue\">an html\\n' +\n               '<em onmouseover=\"this.textContent=\\'PWN3D!\\'\">click here</em>\\n' +\n               'snippet</p>';\n             $scope.deliberatelyTrustDangerousSnippet = function() {\n               return $sce.trustAsHtml($scope.snippet);\n             };\n           }]);\n     </script>\n     <div ng-controller=\"ExampleController\">\n        Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <td>Directive</td>\n           <td>How</td>\n           <td>Source</td>\n           <td>Rendered</td>\n         </tr>\n         <tr id=\"bind-html-with-sanitize\">\n           <td>ng-bind-html</td>\n           <td>Automatically uses $sanitize</td>\n           <td><pre>&lt;div ng-bind-html=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind-html=\"snippet\"></div></td>\n         </tr>\n         <tr id=\"bind-html-with-trust\">\n           <td>ng-bind-html</td>\n           <td>Bypass $sanitize by explicitly trusting the dangerous value</td>\n           <td>\n           <pre>&lt;div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"&gt;\n&lt;/div&gt;</pre>\n           </td>\n           <td><div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"></div></td>\n         </tr>\n         <tr id=\"bind-default\">\n           <td>ng-bind</td>\n           <td>Automatically escapes</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n       </div>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     it('should sanitize the html snippet by default', function() {\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('<p>an html\\n<em>click here</em>\\nsnippet</p>');\n     });\n\n     it('should inline raw snippet if bound to a trusted value', function() {\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).\n         toBe(\"<p style=\\\"color:blue\\\">an html\\n\" +\n              \"<em onmouseover=\\\"this.textContent='PWN3D!'\\\">click here</em>\\n\" +\n              \"snippet</p>\");\n     });\n\n     it('should escape snippet without any filter', function() {\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).\n         toBe(\"&lt;p style=\\\"color:blue\\\"&gt;an html\\n\" +\n              \"&lt;em onmouseover=\\\"this.textContent='PWN3D!'\\\"&gt;click here&lt;/em&gt;\\n\" +\n              \"snippet&lt;/p&gt;\");\n     });\n\n     it('should update', function() {\n       element(by.model('snippet')).clear();\n       element(by.model('snippet')).sendKeys('new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('new <b>text</b>');\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).toBe(\n         'new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).toBe(\n         \"new &lt;b onclick=\\\"alert(1)\\\"&gt;text&lt;/b&gt;\");\n     });\n   </file>\n   </example>\n */\n\n\n/**\n * @ngdoc provider\n * @name $sanitizeProvider\n * @this\n *\n * @description\n * Creates and configures {@link $sanitize} instance.\n */\nfunction $SanitizeProvider() {\n  var svgEnabled = false;\n\n  this.$get = ['$$sanitizeUri', function($$sanitizeUri) {\n    if (svgEnabled) {\n      extend(validElements, svgElements);\n    }\n    return function(html) {\n      var buf = [];\n      htmlParser(html, htmlSanitizeWriter(buf, function(uri, isImage) {\n        return !/^unsafe:/.test($$sanitizeUri(uri, isImage));\n      }));\n      return buf.join('');\n    };\n  }];\n\n\n  /**\n   * @ngdoc method\n   * @name $sanitizeProvider#enableSvg\n   * @kind function\n   *\n   * @description\n   * Enables a subset of svg to be supported by the sanitizer.\n   *\n   * <div class=\"alert alert-warning\">\n   *   <p>By enabling this setting without taking other precautions, you might expose your\n   *   application to click-hijacking attacks. In these attacks, sanitized svg elements could be positioned\n   *   outside of the containing element and be rendered over other elements on the page (e.g. a login\n   *   link). Such behavior can then result in phishing incidents.</p>\n   *\n   *   <p>To protect against these, explicitly setup `overflow: hidden` css rule for all potential svg\n   *   tags within the sanitized content:</p>\n   *\n   *   <br>\n   *\n   *   <pre><code>\n   *   .rootOfTheIncludedContent svg {\n   *     overflow: hidden !important;\n   *   }\n   *   </code></pre>\n   * </div>\n   *\n   * @param {boolean=} flag Enable or disable SVG support in the sanitizer.\n   * @returns {boolean|ng.$sanitizeProvider} Returns the currently configured value if called\n   *    without an argument or self for chaining otherwise.\n   */\n  this.enableSvg = function(enableSvg) {\n    if (isDefined(enableSvg)) {\n      svgEnabled = enableSvg;\n      return this;\n    } else {\n      return svgEnabled;\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // Private stuff\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n  bind = angular.bind;\n  extend = angular.extend;\n  forEach = angular.forEach;\n  isDefined = angular.isDefined;\n  lowercase = angular.lowercase;\n  noop = angular.noop;\n\n  htmlParser = htmlParserImpl;\n  htmlSanitizeWriter = htmlSanitizeWriterImpl;\n\n  // Regular Expressions for parsing tags and attributes\n  var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n    // Match everything outside of normal chars and \" (quote character)\n    NON_ALPHANUMERIC_REGEXP = /([^#-~ |!])/g;\n\n\n  // Good source of info about elements and attributes\n  // http://dev.w3.org/html5/spec/Overview.html#semantics\n  // http://simon.html5.org/html-elements\n\n  // Safe Void Elements - HTML5\n  // http://dev.w3.org/html5/spec/Overview.html#void-elements\n  var voidElements = toMap('area,br,col,hr,img,wbr');\n\n  // Elements that you can, intentionally, leave open (and which close themselves)\n  // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n  var optionalEndTagBlockElements = toMap('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),\n      optionalEndTagInlineElements = toMap('rp,rt'),\n      optionalEndTagElements = extend({},\n                                              optionalEndTagInlineElements,\n                                              optionalEndTagBlockElements);\n\n  // Safe Block Elements - HTML5\n  var blockElements = extend({}, optionalEndTagBlockElements, toMap('address,article,' +\n          'aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n          'h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul'));\n\n  // Inline Elements - HTML5\n  var inlineElements = extend({}, optionalEndTagInlineElements, toMap('a,abbr,acronym,b,' +\n          'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,' +\n          'samp,small,span,strike,strong,sub,sup,time,tt,u,var'));\n\n  // SVG Elements\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Elements\n  // Note: the elements animate,animateColor,animateMotion,animateTransform,set are intentionally omitted.\n  // They can potentially allow for arbitrary javascript to be executed. See #11290\n  var svgElements = toMap('circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,' +\n          'hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,' +\n          'radialGradient,rect,stop,svg,switch,text,title,tspan');\n\n  // Blocked Elements (will be stripped)\n  var blockedElements = toMap('script,style');\n\n  var validElements = extend({},\n                                     voidElements,\n                                     blockElements,\n                                     inlineElements,\n                                     optionalEndTagElements);\n\n  //Attributes that have href and hence need to be sanitized\n  var uriAttrs = toMap('background,cite,href,longdesc,src,xlink:href');\n\n  var htmlAttrs = toMap('abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,' +\n      'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,' +\n      'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,' +\n      'scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,' +\n      'valign,value,vspace,width');\n\n  // SVG attributes (without \"id\" and \"name\" attributes)\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Attributes\n  var svgAttrs = toMap('accent-height,accumulate,additive,alphabetic,arabic-form,ascent,' +\n      'baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,' +\n      'cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,' +\n      'font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,' +\n      'height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,' +\n      'marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,' +\n      'max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,' +\n      'path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,' +\n      'requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,' +\n      'stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,' +\n      'stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,' +\n      'stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,' +\n      'underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,' +\n      'width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,' +\n      'xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan', true);\n\n  var validAttrs = extend({},\n                                  uriAttrs,\n                                  svgAttrs,\n                                  htmlAttrs);\n\n  function toMap(str, lowercaseKeys) {\n    var obj = {}, items = str.split(','), i;\n    for (i = 0; i < items.length; i++) {\n      obj[lowercaseKeys ? lowercase(items[i]) : items[i]] = true;\n    }\n    return obj;\n  }\n\n  var inertBodyElement;\n  (function(window) {\n    var doc;\n    if (window.document && window.document.implementation) {\n      doc = window.document.implementation.createHTMLDocument('inert');\n    } else {\n      throw $sanitizeMinErr('noinert', 'Can\\'t create an inert html document');\n    }\n    var docElement = doc.documentElement || doc.getDocumentElement();\n    var bodyElements = docElement.getElementsByTagName('body');\n\n    // usually there should be only one body element in the document, but IE doesn't have any, so we need to create one\n    if (bodyElements.length === 1) {\n      inertBodyElement = bodyElements[0];\n    } else {\n      var html = doc.createElement('html');\n      inertBodyElement = doc.createElement('body');\n      html.appendChild(inertBodyElement);\n      doc.appendChild(html);\n    }\n  })(window);\n\n  /**\n   * @example\n   * htmlParser(htmlString, {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * });\n   *\n   * @param {string} html string\n   * @param {object} handler\n   */\n  function htmlParserImpl(html, handler) {\n    if (html === null || html === undefined) {\n      html = '';\n    } else if (typeof html !== 'string') {\n      html = '' + html;\n    }\n    inertBodyElement.innerHTML = html;\n\n    //mXSS protection\n    var mXSSAttempts = 5;\n    do {\n      if (mXSSAttempts === 0) {\n        throw $sanitizeMinErr('uinput', 'Failed to sanitize html because the input is unstable');\n      }\n      mXSSAttempts--;\n\n      // strip custom-namespaced attributes on IE<=11\n      if (window.document.documentMode) {\n        stripCustomNsAttrs(inertBodyElement);\n      }\n      html = inertBodyElement.innerHTML; //trigger mXSS\n      inertBodyElement.innerHTML = html;\n    } while (html !== inertBodyElement.innerHTML);\n\n    var node = inertBodyElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case 1: // ELEMENT_NODE\n          handler.start(node.nodeName.toLowerCase(), attrToMap(node.attributes));\n          break;\n        case 3: // TEXT NODE\n          handler.chars(node.textContent);\n          break;\n      }\n\n      var nextNode;\n      if (!(nextNode = node.firstChild)) {\n        if (node.nodeType === 1) {\n          handler.end(node.nodeName.toLowerCase());\n        }\n        nextNode = node.nextSibling;\n        if (!nextNode) {\n          while (nextNode == null) {\n            node = node.parentNode;\n            if (node === inertBodyElement) break;\n            nextNode = node.nextSibling;\n            if (node.nodeType === 1) {\n              handler.end(node.nodeName.toLowerCase());\n            }\n          }\n        }\n      }\n      node = nextNode;\n    }\n\n    while ((node = inertBodyElement.firstChild)) {\n      inertBodyElement.removeChild(node);\n    }\n  }\n\n  function attrToMap(attrs) {\n    var map = {};\n    for (var i = 0, ii = attrs.length; i < ii; i++) {\n      var attr = attrs[i];\n      map[attr.name] = attr.value;\n    }\n    return map;\n  }\n\n\n  /**\n   * Escapes all potentially dangerous characters, so that the\n   * resulting string can be safely inserted into attribute or\n   * element text.\n   * @param value\n   * @returns {string} escaped text\n   */\n  function encodeEntities(value) {\n    return value.\n      replace(/&/g, '&amp;').\n      replace(SURROGATE_PAIR_REGEXP, function(value) {\n        var hi = value.charCodeAt(0);\n        var low = value.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n      }).\n      replace(NON_ALPHANUMERIC_REGEXP, function(value) {\n        return '&#' + value.charCodeAt(0) + ';';\n      }).\n      replace(/</g, '&lt;').\n      replace(/>/g, '&gt;');\n  }\n\n  /**\n   * create an HTML/XML writer which writes to buffer\n   * @param {Array} buf use buf.join('') to get out sanitized html string\n   * @returns {object} in the form of {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * }\n   */\n  function htmlSanitizeWriterImpl(buf, uriValidator) {\n    var ignoreCurrentElement = false;\n    var out = bind(buf, buf.push);\n    return {\n      start: function(tag, attrs) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && blockedElements[tag]) {\n          ignoreCurrentElement = tag;\n        }\n        if (!ignoreCurrentElement && validElements[tag] === true) {\n          out('<');\n          out(tag);\n          forEach(attrs, function(value, key) {\n            var lkey = lowercase(key);\n            var isImage = (tag === 'img' && lkey === 'src') || (lkey === 'background');\n            if (validAttrs[lkey] === true &&\n              (uriAttrs[lkey] !== true || uriValidator(value, isImage))) {\n              out(' ');\n              out(key);\n              out('=\"');\n              out(encodeEntities(value));\n              out('\"');\n            }\n          });\n          out('>');\n        }\n      },\n      end: function(tag) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && validElements[tag] === true && voidElements[tag] !== true) {\n          out('</');\n          out(tag);\n          out('>');\n        }\n        // eslint-disable-next-line eqeqeq\n        if (tag == ignoreCurrentElement) {\n          ignoreCurrentElement = false;\n        }\n      },\n      chars: function(chars) {\n        if (!ignoreCurrentElement) {\n          out(encodeEntities(chars));\n        }\n      }\n    };\n  }\n\n\n  /**\n   * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1' attribute to declare\n   * ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo'). This is undesirable since we don't want\n   * to allow any of these custom attributes. This method strips them all.\n   *\n   * @param node Root element to process\n   */\n  function stripCustomNsAttrs(node) {\n    while (node) {\n      if (node.nodeType === window.Node.ELEMENT_NODE) {\n        var attrs = node.attributes;\n        for (var i = 0, l = attrs.length; i < l; i++) {\n          var attrNode = attrs[i];\n          var attrName = attrNode.name.toLowerCase();\n          if (attrName === 'xmlns:ns1' || attrName.lastIndexOf('ns1:', 0) === 0) {\n            node.removeAttributeNode(attrNode);\n            i--;\n            l--;\n          }\n        }\n      }\n\n      var nextNode = node.firstChild;\n      if (nextNode) {\n        stripCustomNsAttrs(nextNode);\n      }\n\n      node = node.nextSibling;\n    }\n  }\n}\n\nfunction sanitizeText(chars) {\n  var buf = [];\n  var writer = htmlSanitizeWriter(buf, noop);\n  writer.chars(chars);\n  return buf.join('');\n}\n\n\n// define ngSanitize module and register $sanitize service\nangular.module('ngSanitize', []).provider('$sanitize', $SanitizeProvider);\n\n/**\n * @ngdoc filter\n * @name linky\n * @kind function\n *\n * @description\n * Finds links in text input and turns them into html links. Supports `http/https/ftp/mailto` and\n * plain email address links.\n *\n * Requires the {@link ngSanitize `ngSanitize`} module to be installed.\n *\n * @param {string} text Input text.\n * @param {string} target Window (`_blank|_self|_parent|_top`) or named frame to open links in.\n * @param {object|function(url)} [attributes] Add custom attributes to the link element.\n *\n *    Can be one of:\n *\n *    - `object`: A map of attributes\n *    - `function`: Takes the url as a parameter and returns a map of attributes\n *\n *    If the map of attributes contains a value for `target`, it overrides the value of\n *    the target parameter.\n *\n *\n * @returns {string} Html-linkified and {@link $sanitize sanitized} text.\n *\n * @usage\n   <span ng-bind-html=\"linky_expression | linky\"></span>\n *\n * @example\n   <example module=\"linkyExample\" deps=\"angular-sanitize.js\" name=\"linky-filter\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n       Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <th>Filter</th>\n           <th>Source</th>\n           <th>Rendered</th>\n         </tr>\n         <tr id=\"linky-filter\">\n           <td>linky filter</td>\n           <td>\n             <pre>&lt;div ng-bind-html=\"snippet | linky\"&gt;<br>&lt;/div&gt;</pre>\n           </td>\n           <td>\n             <div ng-bind-html=\"snippet | linky\"></div>\n           </td>\n         </tr>\n         <tr id=\"linky-target\">\n          <td>linky target</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"></div>\n          </td>\n         </tr>\n         <tr id=\"linky-custom-attributes\">\n          <td>linky custom attributes</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"></div>\n          </td>\n         </tr>\n         <tr id=\"escaped-html\">\n           <td>no filter</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n     </file>\n     <file name=\"script.js\">\n       angular.module('linkyExample', ['ngSanitize'])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.snippet =\n             'Pretty text with some links:\\n' +\n             'http://angularjs.org/,\\n' +\n             'mailto:us@somewhere.org,\\n' +\n             'another@somewhere.org,\\n' +\n             'and one more: ftp://127.0.0.1/.';\n           $scope.snippetWithSingleURL = 'http://angularjs.org/';\n         }]);\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should linkify the snippet with urls', function() {\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(4);\n       });\n\n       it('should not linkify snippet without the linky filter', function() {\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, mailto:us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#escaped-html a')).count()).toEqual(0);\n       });\n\n       it('should update', function() {\n         element(by.model('snippet')).clear();\n         element(by.model('snippet')).sendKeys('new http://link.');\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('new http://link.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(1);\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText())\n             .toBe('new http://link.');\n       });\n\n       it('should work with the target property', function() {\n        expect(element(by.id('linky-target')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_blank'\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-target a')).getAttribute('target')).toEqual('_blank');\n       });\n\n       it('should optionally add custom attributes', function() {\n        expect(element(by.id('linky-custom-attributes')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-custom-attributes a')).getAttribute('rel')).toEqual('nofollow');\n       });\n     </file>\n   </example>\n */\nangular.module('ngSanitize').filter('linky', ['$sanitize', function($sanitize) {\n  var LINKY_URL_REGEXP =\n        /((ftp|https?):\\/\\/|(www\\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\\S*[^\\s.;,(){}<>\"\\u201d\\u2019]/i,\n      MAILTO_REGEXP = /^mailto:/i;\n\n  var linkyMinErr = angular.$$minErr('linky');\n  var isDefined = angular.isDefined;\n  var isFunction = angular.isFunction;\n  var isObject = angular.isObject;\n  var isString = angular.isString;\n\n  return function(text, target, attributes) {\n    if (text == null || text === '') return text;\n    if (!isString(text)) throw linkyMinErr('notstring', 'Expected string but received: {0}', text);\n\n    var attributesFn =\n      isFunction(attributes) ? attributes :\n      isObject(attributes) ? function getAttributesObject() {return attributes;} :\n      function getEmptyAttributesObject() {return {};};\n\n    var match;\n    var raw = text;\n    var html = [];\n    var url;\n    var i;\n    while ((match = raw.match(LINKY_URL_REGEXP))) {\n      // We can not end in these as they are sometimes found at the end of the sentence\n      url = match[0];\n      // if we did not match ftp/http/www/mailto then assume mailto\n      if (!match[2] && !match[4]) {\n        url = (match[3] ? 'http://' : 'mailto:') + url;\n      }\n      i = match.index;\n      addText(raw.substr(0, i));\n      addLink(url, match[0].replace(MAILTO_REGEXP, ''));\n      raw = raw.substring(i + match[0].length);\n    }\n    addText(raw);\n    return $sanitize(html.join(''));\n\n    function addText(text) {\n      if (!text) {\n        return;\n      }\n      html.push(sanitizeText(text));\n    }\n\n    function addLink(url, text) {\n      var key, linkAttributes = attributesFn(url);\n      html.push('<a ');\n\n      for (key in linkAttributes) {\n        html.push(key + '=\"' + linkAttributes[key] + '\" ');\n      }\n\n      if (isDefined(target) && !('target' in linkAttributes)) {\n        html.push('target=\"',\n                  target,\n                  '\" ');\n      }\n      html.push('href=\"',\n                url.replace(/\"/g, '&quot;'),\n                '\">');\n      addText(text);\n      html.push('</a>');\n    }\n  };\n}]);\n\n\n})(window, window.angular);\n","angular.module('hackApp')\n.service('apiService', function($http){\n\n\tthis.getTopStories=function(){\n\t\treturn $http.get('http://node-hnapi.herokuapp.com/news')\n\t\t.then(function(res){\n\t\t\tconsole.log(res);\n\t\t\treturn res.data;\n\t\t});\n\t};\n\n\tthis.getSingleStory=function(id){\n\t\treturn $http.get('http://node-hnapi.herokuapp.com/item/'+id)\n\t\t.then(function(res){\n\t\t\treturn res.data;\n\t\t});\n\t};\n\n\n\n});","\n\nangular.module('hackApp')\n\t.directive('collection', function () {\n  return {\n      restrict: \"E\",\n      replace: true,\n      scope: {\n          collection: '='\n      },\n      template: \"<ul><member ng-repeat='member in collection' member='member'></member></ul>\"\n  }\n})\n\n\n\t","angular.module('hackApp')\n    .controller('frontCtrl', function($scope, apiService) {\n\n\n        apiService.getTopStories().then(function(response) {\n            $scope.news=response;\n        });\n\n        \n    \n         \n\n\n    });\n","angular.module('hackApp')\n    .controller('itemCtrl', function($scope, apiService, $stateParams) {\n\n            apiService.getSingleStory($stateParams.id).then(function(res) {\n                $scope.item=res;}\n                );\n\n\n            \n\n    \n         \n\n\n\n\n\n\n\n\n        });\n\n                   ","angular.module('hackApp')\n    .directive('member', function($compile) {\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                member: '='\n            },\n            templateUrl: 'member.html',\n            link: function(scope, element, attrs) {\n                if (angular.isArray(scope.member.comments)) {\n                    $compile('<collection ng-hide=\"ToggleView\" collection=\"member.comments\"></collection>')(scope, function(cloned, scope) {\n                        element.append(cloned);\n                    });\n                }\n            }\n        }\n    })\n"]}